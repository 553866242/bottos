// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/bottos-project/bottos/api/core-api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PushTrxResponse struct {
	Errcode uint32                  `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *PushTrxResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *PushTrxResponse) Reset()                    { *m = PushTrxResponse{} }
func (m *PushTrxResponse) String() string            { return proto.CompactTextString(m) }
func (*PushTrxResponse) ProtoMessage()               {}
func (*PushTrxResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *PushTrxResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *PushTrxResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PushTrxResponse) GetResult() *PushTrxResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type PushTrxResponse_Result struct {
	Trx     *Transaction `protobuf:"bytes,1,opt,name=trx" json:"trx"`
	TrxHash string       `protobuf:"bytes,2,opt,name=trx_hash,json=trxHash" json:"trx_hash"`
}

func (m *PushTrxResponse_Result) Reset()                    { *m = PushTrxResponse_Result{} }
func (m *PushTrxResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*PushTrxResponse_Result) ProtoMessage()               {}
func (*PushTrxResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

func (m *PushTrxResponse_Result) GetTrx() *Transaction {
	if m != nil {
		return m.Trx
	}
	return nil
}

func (m *PushTrxResponse_Result) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

type QueryTrxRequest struct {
	TrxHash string `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash" json:"trx_hash"`
}

func (m *QueryTrxRequest) Reset()                    { *m = QueryTrxRequest{} }
func (m *QueryTrxRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryTrxRequest) ProtoMessage()               {}
func (*QueryTrxRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *QueryTrxRequest) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

type QueryTrxResponse struct {
	Errcode uint32       `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *Transaction `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryTrxResponse) Reset()                    { *m = QueryTrxResponse{} }
func (m *QueryTrxResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryTrxResponse) ProtoMessage()               {}
func (*QueryTrxResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *QueryTrxResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryTrxResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryTrxResponse) GetResult() *Transaction {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryBlockRequest struct {
	BlockNum  uint32 `protobuf:"varint,1,opt,name=block_num,json=blockNum" json:"block_num"`
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash" json:"block_hash"`
}

func (m *QueryBlockRequest) Reset()                    { *m = QueryBlockRequest{} }
func (m *QueryBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryBlockRequest) ProtoMessage()               {}
func (*QueryBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *QueryBlockRequest) GetBlockNum() uint32 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *QueryBlockRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type QueryBlockResponse struct {
	Errcode uint32                     `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                     `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *QueryBlockResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryBlockResponse) Reset()                    { *m = QueryBlockResponse{} }
func (m *QueryBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryBlockResponse) ProtoMessage()               {}
func (*QueryBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *QueryBlockResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryBlockResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryBlockResponse) GetResult() *QueryBlockResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryBlockResponse_Result struct {
	PrevBlockHash    string         `protobuf:"bytes,1,opt,name=prev_block_hash,json=prevBlockHash" json:"prev_block_hash"`
	BlockNum         uint32         `protobuf:"varint,2,opt,name=block_num,json=blockNum" json:"block_num"`
	BlockHash        string         `protobuf:"bytes,3,opt,name=block_hash,json=blockHash" json:"block_hash"`
	CursorBlockLabel uint32         `protobuf:"varint,4,opt,name=cursor_block_label,json=cursorBlockLabel" json:"cursor_block_label"`
	BlockTime        uint64         `protobuf:"varint,5,opt,name=block_time,json=blockTime" json:"block_time"`
	TrxMerkleRoot    string         `protobuf:"bytes,6,opt,name=trx_merkle_root,json=trxMerkleRoot" json:"trx_merkle_root"`
	Delegate         string         `protobuf:"bytes,7,opt,name=delegate" json:"delegate"`
	DelegateSign     string         `protobuf:"bytes,8,opt,name=delegate_sign,json=delegateSign" json:"delegate_sign"`
	Trxs             []*Transaction `protobuf:"bytes,9,rep,name=trxs" json:"trxs"`
}

func (m *QueryBlockResponse_Result) Reset()                    { *m = QueryBlockResponse_Result{} }
func (m *QueryBlockResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*QueryBlockResponse_Result) ProtoMessage()               {}
func (*QueryBlockResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 0} }

func (m *QueryBlockResponse_Result) GetPrevBlockHash() string {
	if m != nil {
		return m.PrevBlockHash
	}
	return ""
}

func (m *QueryBlockResponse_Result) GetBlockNum() uint32 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *QueryBlockResponse_Result) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *QueryBlockResponse_Result) GetCursorBlockLabel() uint32 {
	if m != nil {
		return m.CursorBlockLabel
	}
	return 0
}

func (m *QueryBlockResponse_Result) GetBlockTime() uint64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *QueryBlockResponse_Result) GetTrxMerkleRoot() string {
	if m != nil {
		return m.TrxMerkleRoot
	}
	return ""
}

func (m *QueryBlockResponse_Result) GetDelegate() string {
	if m != nil {
		return m.Delegate
	}
	return ""
}

func (m *QueryBlockResponse_Result) GetDelegateSign() string {
	if m != nil {
		return m.DelegateSign
	}
	return ""
}

func (m *QueryBlockResponse_Result) GetTrxs() []*Transaction {
	if m != nil {
		return m.Trxs
	}
	return nil
}

type QueryChainInfoRequest struct {
}

func (m *QueryChainInfoRequest) Reset()                    { *m = QueryChainInfoRequest{} }
func (m *QueryChainInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryChainInfoRequest) ProtoMessage()               {}
func (*QueryChainInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

type QueryChainInfoResponse struct {
	Errcode uint32                         `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                         `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *QueryChainInfoResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryChainInfoResponse) Reset()                    { *m = QueryChainInfoResponse{} }
func (m *QueryChainInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryChainInfoResponse) ProtoMessage()               {}
func (*QueryChainInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *QueryChainInfoResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryChainInfoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryChainInfoResponse) GetResult() *QueryChainInfoResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryChainInfoResponse_Result struct {
	HeadBlockNum          uint32 `protobuf:"varint,1,opt,name=head_block_num,json=headBlockNum" json:"head_block_num"`
	HeadBlockHash         string `protobuf:"bytes,2,opt,name=head_block_hash,json=headBlockHash" json:"head_block_hash"`
	HeadBlockTime         uint64 `protobuf:"varint,3,opt,name=head_block_time,json=headBlockTime" json:"head_block_time"`
	HeadBlockDelegate     string `protobuf:"bytes,4,opt,name=head_block_delegate,json=headBlockDelegate" json:"head_block_delegate"`
	CursorLabel           uint32 `protobuf:"varint,5,opt,name=cursor_label,json=cursorLabel" json:"cursor_label"`
	LastConsensusBlockNum uint32 `protobuf:"varint,6,opt,name=last_consensus_block_num,json=lastConsensusBlockNum" json:"last_consensus_block_num"`
}

func (m *QueryChainInfoResponse_Result) Reset()         { *m = QueryChainInfoResponse_Result{} }
func (m *QueryChainInfoResponse_Result) String() string { return proto.CompactTextString(m) }
func (*QueryChainInfoResponse_Result) ProtoMessage()    {}
func (*QueryChainInfoResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{6, 0}
}

func (m *QueryChainInfoResponse_Result) GetHeadBlockNum() uint32 {
	if m != nil {
		return m.HeadBlockNum
	}
	return 0
}

func (m *QueryChainInfoResponse_Result) GetHeadBlockHash() string {
	if m != nil {
		return m.HeadBlockHash
	}
	return ""
}

func (m *QueryChainInfoResponse_Result) GetHeadBlockTime() uint64 {
	if m != nil {
		return m.HeadBlockTime
	}
	return 0
}

func (m *QueryChainInfoResponse_Result) GetHeadBlockDelegate() string {
	if m != nil {
		return m.HeadBlockDelegate
	}
	return ""
}

func (m *QueryChainInfoResponse_Result) GetCursorLabel() uint32 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *QueryChainInfoResponse_Result) GetLastConsensusBlockNum() uint32 {
	if m != nil {
		return m.LastConsensusBlockNum
	}
	return 0
}

type QueryAccountRequest struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name"`
}

func (m *QueryAccountRequest) Reset()                    { *m = QueryAccountRequest{} }
func (m *QueryAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountRequest) ProtoMessage()               {}
func (*QueryAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *QueryAccountRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

type QueryAccountResponse struct {
	Errcode uint32                       `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                       `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *QueryAccountResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryAccountResponse) Reset()                    { *m = QueryAccountResponse{} }
func (m *QueryAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountResponse) ProtoMessage()               {}
func (*QueryAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *QueryAccountResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryAccountResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryAccountResponse) GetResult() *QueryAccountResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryAccountResponse_Result struct {
	AccountName   string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name"`
	Pubkey        string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey"`
	Balance       uint64 `protobuf:"varint,3,opt,name=balance" json:"balance"`
	StakedBalance uint64 `protobuf:"varint,4,opt,name=staked_balance,json=stakedBalance" json:"staked_balance"`
}

func (m *QueryAccountResponse_Result) Reset()                    { *m = QueryAccountResponse_Result{} }
func (m *QueryAccountResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountResponse_Result) ProtoMessage()               {}
func (*QueryAccountResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8, 0} }

func (m *QueryAccountResponse_Result) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *QueryAccountResponse_Result) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *QueryAccountResponse_Result) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *QueryAccountResponse_Result) GetStakedBalance() uint64 {
	if m != nil {
		return m.StakedBalance
	}
	return 0
}

type QueryObjectReq struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
	Object   string `protobuf:"bytes,2,opt,name=object" json:"object"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key"`
}

func (m *QueryObjectReq) Reset()                    { *m = QueryObjectReq{} }
func (m *QueryObjectReq) String() string            { return proto.CompactTextString(m) }
func (*QueryObjectReq) ProtoMessage()               {}
func (*QueryObjectReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *QueryObjectReq) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *QueryObjectReq) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *QueryObjectReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type QueryObjectResponse struct {
	Errcode uint32                      `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                      `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *QueryObjectResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryObjectResponse) Reset()                    { *m = QueryObjectResponse{} }
func (m *QueryObjectResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryObjectResponse) ProtoMessage()               {}
func (*QueryObjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *QueryObjectResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryObjectResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryObjectResponse) GetResult() *QueryObjectResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryObjectResponse_Result struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
	Object   string `protobuf:"bytes,2,opt,name=object" json:"object"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key"`
	Value    string `protobuf:"bytes,4,opt,name=value" json:"value"`
}

func (m *QueryObjectResponse_Result) Reset()                    { *m = QueryObjectResponse_Result{} }
func (m *QueryObjectResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*QueryObjectResponse_Result) ProtoMessage()               {}
func (*QueryObjectResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10, 0} }

func (m *QueryObjectResponse_Result) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *QueryObjectResponse_Result) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *QueryObjectResponse_Result) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryObjectResponse_Result) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type QueryAbiReq struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
}

func (m *QueryAbiReq) Reset()                    { *m = QueryAbiReq{} }
func (m *QueryAbiReq) String() string            { return proto.CompactTextString(m) }
func (*QueryAbiReq) ProtoMessage()               {}
func (*QueryAbiReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *QueryAbiReq) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

type QueryAbiResponse struct {
	Errcode uint32 `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  string `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryAbiResponse) Reset()                    { *m = QueryAbiResponse{} }
func (m *QueryAbiResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryAbiResponse) ProtoMessage()               {}
func (*QueryAbiResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *QueryAbiResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryAbiResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryAbiResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type QueryTransferCreditRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name"`
	Spender string `protobuf:"bytes,2,opt,name=spender" json:"spender"`
}

func (m *QueryTransferCreditRequest) Reset()                    { *m = QueryTransferCreditRequest{} }
func (m *QueryTransferCreditRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryTransferCreditRequest) ProtoMessage()               {}
func (*QueryTransferCreditRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *QueryTransferCreditRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryTransferCreditRequest) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

type QueryTransferCreditResponse struct {
	Errcode uint32                              `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                              `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *QueryTransferCreditResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *QueryTransferCreditResponse) Reset()                    { *m = QueryTransferCreditResponse{} }
func (m *QueryTransferCreditResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryTransferCreditResponse) ProtoMessage()               {}
func (*QueryTransferCreditResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *QueryTransferCreditResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *QueryTransferCreditResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryTransferCreditResponse) GetResult() *QueryTransferCreditResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type QueryTransferCreditResponse_Result struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name"`
	Spender string `protobuf:"bytes,2,opt,name=spender" json:"spender"`
	Limit   uint64 `protobuf:"varint,3,opt,name=limit" json:"limit"`
}

func (m *QueryTransferCreditResponse_Result) Reset()         { *m = QueryTransferCreditResponse_Result{} }
func (m *QueryTransferCreditResponse_Result) String() string { return proto.CompactTextString(m) }
func (*QueryTransferCreditResponse_Result) ProtoMessage()    {}
func (*QueryTransferCreditResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{14, 0}
}

func (m *QueryTransferCreditResponse_Result) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryTransferCreditResponse_Result) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

func (m *QueryTransferCreditResponse_Result) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*PushTrxResponse)(nil), "api.PushTrxResponse")
	proto.RegisterType((*PushTrxResponse_Result)(nil), "api.PushTrxResponse.Result")
	proto.RegisterType((*QueryTrxRequest)(nil), "api.QueryTrxRequest")
	proto.RegisterType((*QueryTrxResponse)(nil), "api.QueryTrxResponse")
	proto.RegisterType((*QueryBlockRequest)(nil), "api.QueryBlockRequest")
	proto.RegisterType((*QueryBlockResponse)(nil), "api.QueryBlockResponse")
	proto.RegisterType((*QueryBlockResponse_Result)(nil), "api.QueryBlockResponse.Result")
	proto.RegisterType((*QueryChainInfoRequest)(nil), "api.QueryChainInfoRequest")
	proto.RegisterType((*QueryChainInfoResponse)(nil), "api.QueryChainInfoResponse")
	proto.RegisterType((*QueryChainInfoResponse_Result)(nil), "api.QueryChainInfoResponse.Result")
	proto.RegisterType((*QueryAccountRequest)(nil), "api.QueryAccountRequest")
	proto.RegisterType((*QueryAccountResponse)(nil), "api.QueryAccountResponse")
	proto.RegisterType((*QueryAccountResponse_Result)(nil), "api.QueryAccountResponse.Result")
	proto.RegisterType((*QueryObjectReq)(nil), "api.QueryObjectReq")
	proto.RegisterType((*QueryObjectResponse)(nil), "api.QueryObjectResponse")
	proto.RegisterType((*QueryObjectResponse_Result)(nil), "api.QueryObjectResponse.Result")
	proto.RegisterType((*QueryAbiReq)(nil), "api.QueryAbiReq")
	proto.RegisterType((*QueryAbiResponse)(nil), "api.QueryAbiResponse")
	proto.RegisterType((*QueryTransferCreditRequest)(nil), "api.QueryTransferCreditRequest")
	proto.RegisterType((*QueryTransferCreditResponse)(nil), "api.QueryTransferCreditResponse")
	proto.RegisterType((*QueryTransferCreditResponse_Result)(nil), "api.QueryTransferCreditResponse.Result")
}

func init() {
	proto.RegisterFile("github.com/bottos-project/bottos/api/core-api.proto", fileDescriptor2)
}

var fileDescriptor2 = []byte{
	// 1032 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4b, 0x73, 0x1b, 0xc5,
	0x13, 0xd7, 0x5a, 0xb2, 0x2c, 0xb7, 0xe4, 0x47, 0xc6, 0x8f, 0x6c, 0xe4, 0xfa, 0xff, 0xa3, 0x0c,
	0xc6, 0x88, 0xaa, 0x44, 0xae, 0xb2, 0x8b, 0x24, 0x70, 0x20, 0x65, 0x19, 0x8a, 0x57, 0x48, 0x40,
	0xb8, 0x72, 0xc8, 0x45, 0x35, 0xbb, 0x9a, 0x48, 0x8b, 0x77, 0x77, 0xd6, 0xb3, 0xb3, 0x29, 0xe5,
	0x0c, 0x27, 0xaa, 0xf8, 0x10, 0x7c, 0x0e, 0x8e, 0x5c, 0xf8, 0x08, 0x1c, 0xf9, 0x28, 0xd4, 0x3c,
	0xf6, 0xa1, 0x95, 0x1c, 0x07, 0x15, 0xb7, 0xe9, 0x9e, 0x9e, 0x9e, 0x5f, 0xf7, 0xaf, 0x7b, 0x7a,
	0xe0, 0x74, 0xec, 0x89, 0x49, 0xe2, 0xf4, 0x5c, 0x16, 0x1c, 0x3b, 0x4c, 0x08, 0x16, 0x3f, 0x88,
	0x38, 0xfb, 0x91, 0xba, 0xc2, 0x88, 0xc7, 0x24, 0xf2, 0x8e, 0x5d, 0xc6, 0xe9, 0x03, 0x12, 0x79,
	0xbd, 0x88, 0x33, 0xc1, 0x50, 0x95, 0x44, 0x5e, 0xfb, 0xe1, 0x3b, 0x9d, 0x14, 0x9c, 0x84, 0x31,
	0x71, 0x85, 0xc7, 0x42, 0x7d, 0x18, 0xff, 0x6e, 0xc1, 0xd6, 0x77, 0x49, 0x3c, 0xb9, 0xe0, 0xd3,
	0x01, 0x8d, 0x23, 0x16, 0xc6, 0x14, 0xd9, 0xb0, 0x46, 0x39, 0x77, 0xd9, 0x88, 0xda, 0x56, 0xc7,
	0xea, 0x6e, 0x0c, 0x52, 0x11, 0x6d, 0x43, 0x35, 0x88, 0xc7, 0xf6, 0x4a, 0xc7, 0xea, 0xae, 0x0f,
	0xe4, 0x12, 0x9d, 0x42, 0x9d, 0xd3, 0x38, 0xf1, 0x85, 0x5d, 0xed, 0x58, 0xdd, 0xe6, 0xc9, 0x41,
	0x4f, 0x02, 0x2b, 0x79, 0xec, 0x0d, 0x94, 0xc9, 0xc0, 0x98, 0xb6, 0xbf, 0x80, 0xba, 0xd6, 0x20,
	0x0c, 0x55, 0xc1, 0xa7, 0xea, 0x9a, 0xe6, 0xc9, 0xb6, 0x3a, 0x7b, 0x91, 0x63, 0x1c, 0xc8, 0x4d,
	0x74, 0x07, 0x1a, 0x82, 0x4f, 0x87, 0x13, 0x12, 0x4f, 0xcc, 0xcd, 0x6b, 0x82, 0x4f, 0xbf, 0x24,
	0xf1, 0x04, 0xdf, 0x87, 0xad, 0xef, 0x13, 0xca, 0xdf, 0xa8, 0xbb, 0xae, 0x12, 0x1a, 0x8b, 0x19,
	0x6b, 0x6b, 0xd6, 0x7a, 0x02, 0xdb, 0xb9, 0xf5, 0x12, 0xb1, 0x76, 0x4b, 0xb1, 0xce, 0xe3, 0x35,
	0xfb, 0xf8, 0x39, 0xdc, 0x52, 0x37, 0xf5, 0x7d, 0xe6, 0x5e, 0xa6, 0xc8, 0x0e, 0x60, 0xdd, 0x91,
	0xf2, 0x30, 0x4c, 0x02, 0x73, 0x59, 0x43, 0x29, 0x9e, 0x25, 0x01, 0xfa, 0x1f, 0x80, 0xde, 0x2c,
	0x84, 0xa9, 0xcd, 0x15, 0xf4, 0x3f, 0xaa, 0x80, 0x8a, 0x1e, 0x97, 0x40, 0xff, 0xb0, 0x84, 0xfe,
	0xff, 0x0a, 0xfd, 0xbc, 0xd3, 0x32, 0x59, 0x7f, 0xae, 0x64, 0x6c, 0x1d, 0xc1, 0x56, 0xc4, 0xe9,
	0xeb, 0x61, 0x01, 0xa9, 0x4e, 0xf1, 0x86, 0x54, 0xf7, 0x53, 0xb4, 0xb3, 0x91, 0xae, 0xbc, 0x35,
	0xd2, 0x6a, 0x29, 0x52, 0x74, 0x1f, 0x90, 0x9b, 0xf0, 0x98, 0x71, 0x73, 0x8b, 0x4f, 0x1c, 0xea,
	0xdb, 0x35, 0xe5, 0x64, 0x5b, 0xef, 0xa8, 0x8b, 0x9e, 0x4a, 0x7d, 0xee, 0x4c, 0x78, 0x01, 0xb5,
	0x57, 0x3b, 0x56, 0xb7, 0x66, 0x9c, 0x5d, 0x78, 0x01, 0x95, 0x80, 0x65, 0x31, 0x04, 0x94, 0x5f,
	0xfa, 0x74, 0xc8, 0x19, 0x13, 0x76, 0x5d, 0x03, 0x16, 0x7c, 0xfa, 0xad, 0xd2, 0x0e, 0x18, 0x13,
	0xa8, 0x0d, 0x8d, 0x11, 0xf5, 0xe9, 0x98, 0x08, 0x6a, 0xaf, 0x29, 0x83, 0x4c, 0x46, 0xef, 0xc1,
	0x46, 0xba, 0x1e, 0xc6, 0xde, 0x38, 0xb4, 0x1b, 0xca, 0xa0, 0x95, 0x2a, 0x7f, 0xf0, 0xc6, 0x21,
	0x3a, 0x84, 0x9a, 0xe0, 0xd3, 0xd8, 0x5e, 0xef, 0x54, 0x17, 0x16, 0x86, 0xda, 0xc5, 0xb7, 0x61,
	0x4f, 0xe5, 0xfb, 0x7c, 0x42, 0xbc, 0xf0, 0xab, 0xf0, 0x15, 0x33, 0xa5, 0x81, 0x7f, 0xad, 0xc2,
	0x7e, 0x79, 0x67, 0x09, 0x8a, 0x3f, 0x29, 0x51, 0x8c, 0x73, 0x8a, 0xe7, 0x1c, 0x97, 0x69, 0xfe,
	0x25, 0xa7, 0xf9, 0x10, 0x36, 0x27, 0x94, 0x8c, 0x86, 0xe5, 0x6a, 0x6d, 0x49, 0x6d, 0x3f, 0xe5,
	0xf1, 0x08, 0xb6, 0x0a, 0x56, 0x85, 0xb2, 0xdd, 0xc8, 0xcc, 0x14, 0xa1, 0xb3, 0x76, 0x8a, 0xa7,
	0xaa, 0xe2, 0x29, 0xb7, 0x53, 0x5c, 0xf5, 0x60, 0xa7, 0x60, 0x97, 0xd1, 0x51, 0x53, 0x3e, 0x6f,
	0x65, 0xb6, 0x9f, 0xa5, 0xbc, 0xdc, 0x83, 0x96, 0x29, 0x14, 0x5d, 0x22, 0xab, 0x0a, 0x63, 0x53,
	0xeb, 0x74, 0x75, 0x3c, 0x02, 0xdb, 0x27, 0xb1, 0x18, 0xba, 0x32, 0xe0, 0x30, 0x4e, 0xe2, 0x42,
	0x48, 0x75, 0x65, 0xbe, 0x27, 0xf7, 0xcf, 0xd3, 0xed, 0x34, 0x36, 0xfc, 0x18, 0x76, 0x54, 0xd6,
	0xce, 0x5c, 0x97, 0x25, 0xa1, 0x48, 0x3b, 0xf8, 0x1e, 0xb4, 0x88, 0xd6, 0x0c, 0x43, 0x12, 0x50,
	0x53, 0xfc, 0x4d, 0xa3, 0x7b, 0x46, 0x02, 0x8a, 0x7f, 0x5a, 0x81, 0xdd, 0xd9, 0xa3, 0x4b, 0xf0,
	0xf8, 0xb8, 0xc4, 0x63, 0x27, 0xe7, 0xb1, 0xe4, 0xb6, 0xcc, 0xe2, 0xcf, 0x56, 0xc6, 0xe2, 0xcd,
	0x60, 0xd1, 0x3e, 0xd4, 0xa3, 0xc4, 0xb9, 0xa4, 0x6f, 0xcc, 0xe5, 0x46, 0x92, 0x58, 0x1d, 0xe2,
	0x93, 0xd0, 0x4d, 0xa9, 0x4a, 0x45, 0xf4, 0x3e, 0x6c, 0xc6, 0x82, 0x5c, 0xd2, 0xd1, 0x30, 0x35,
	0xa8, 0x69, 0x2e, 0xb5, 0xb6, 0xaf, 0x95, 0xf8, 0x05, 0x6c, 0x2a, 0xb4, 0xcf, 0x1d, 0x39, 0x81,
	0x06, 0xf4, 0x4a, 0x76, 0x98, 0xcb, 0x42, 0xc1, 0x89, 0x2b, 0x0c, 0x92, 0x4c, 0x96, 0x30, 0x98,
	0x32, 0x4c, 0x61, 0x68, 0x49, 0x26, 0x46, 0x62, 0xd3, 0x4f, 0x84, 0x5c, 0xe2, 0xbf, 0x2d, 0x43,
	0x4c, 0xea, 0x78, 0x89, 0xe4, 0x3e, 0x2a, 0x25, 0xf7, 0x6e, 0x9e, 0xdc, 0x59, 0xaf, 0xe5, 0xdc,
	0x8e, 0xb2, 0xd4, 0xfe, 0x27, 0xc1, 0xa0, 0x5d, 0x58, 0x7d, 0x4d, 0xfc, 0x24, 0x2d, 0x71, 0x2d,
	0xe0, 0x0f, 0xa1, 0xa9, 0x89, 0x76, 0xbc, 0x1b, 0xf2, 0x86, 0x5f, 0x98, 0x79, 0xa6, 0x4c, 0x97,
	0xc8, 0xc4, 0xfe, 0x4c, 0x26, 0xd6, 0xb3, 0xe9, 0xf5, 0x35, 0xb4, 0xcd, 0x9c, 0x24, 0x61, 0xfc,
	0x8a, 0xf2, 0x73, 0x4e, 0x47, 0x5e, 0xd6, 0x04, 0x08, 0x6a, 0x85, 0x7a, 0x52, 0x6b, 0x79, 0x6b,
	0x1c, 0xd1, 0x70, 0x44, 0x79, 0x3a, 0xa1, 0x8d, 0x88, 0xff, 0xb2, 0xe0, 0x60, 0xa1, 0xb3, 0x25,
	0xf0, 0x3e, 0x29, 0x31, 0xf7, 0x41, 0xce, 0xdc, 0x62, 0xef, 0x65, 0x06, 0x9f, 0x66, 0x0c, 0xfe,
	0xab, 0x20, 0x24, 0x53, 0xbe, 0x17, 0x78, 0xc2, 0x74, 0x83, 0x16, 0x4e, 0x7e, 0xab, 0xc1, 0xda,
	0x39, 0xe3, 0xf4, 0x2c, 0xf2, 0xd0, 0x29, 0xac, 0x99, 0x3f, 0x0f, 0x9a, 0x7b, 0xfc, 0xdb, 0xbb,
	0x8b, 0xfe, 0x44, 0xb8, 0x82, 0x3e, 0x86, 0x46, 0xfa, 0x1f, 0x41, 0xbb, 0xc5, 0x58, 0xd2, 0xcf,
	0x4c, 0x7b, 0xaf, 0xa4, 0xcd, 0x8e, 0x3e, 0x01, 0xc8, 0x27, 0x37, 0xda, 0x9f, 0x1b, 0xe5, 0xfa,
	0xf8, 0xed, 0x6b, 0x46, 0x3c, 0xae, 0xa0, 0x6f, 0x4c, 0x87, 0x66, 0x73, 0x01, 0xb5, 0x17, 0x0e,
	0x0b, 0xed, 0xe8, 0xe0, 0x2d, 0x83, 0x04, 0x57, 0xd0, 0xe7, 0xd0, 0x2a, 0x3e, 0x4e, 0xc8, 0x5e,
	0xf0, 0x5e, 0x69, 0x47, 0x77, 0xae, 0x7d, 0xc9, 0x70, 0x05, 0x7d, 0x6a, 0x4a, 0x5f, 0xb7, 0x21,
	0xda, 0x99, 0x6f, 0xcc, 0xab, 0xb6, 0x7d, 0x5d, 0xb7, 0xe2, 0x0a, 0xfa, 0xc8, 0xe4, 0xf3, 0xcc,
	0xf1, 0x0c, 0x0b, 0x85, 0x4e, 0x2a, 0xe6, 0xb2, 0xd0, 0x30, 0xb8, 0x82, 0x5e, 0x9a, 0x37, 0x65,
	0xb6, 0x86, 0xd0, 0xdd, 0xeb, 0xab, 0x4b, 0xc7, 0xd2, 0xb9, 0xa9, 0xfc, 0x70, 0xa5, 0x7f, 0xf4,
	0xf2, 0xf0, 0x5d, 0x3e, 0xe6, 0x4e, 0x5d, 0xfd, 0xc6, 0x4f, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x3f, 0x19, 0x9e, 0xba, 0x01, 0x0c, 0x00, 0x00,
}
