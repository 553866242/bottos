// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/bottos-project/core/common/types/block.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Block struct {
	Header       *Header        `protobuf:"bytes,1,opt,name=header" json:"header"`
	Transactions []*Transaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Block) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type Header struct {
	PrevBlockHash []byte `protobuf:"bytes,1,opt,name=prev_block_hash,json=prevBlockHash,proto3" json:"prev_block_hash"`
	Number        uint32 `protobuf:"varint,2,opt,name=number" json:"number"`
	Timestamp     uint64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp"`
	MerkleRoot    []byte `protobuf:"bytes,4,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root"`
	Delegate      []byte `protobuf:"bytes,5,opt,name=delegate,proto3" json:"delegate"`
	DelegateSign  []byte `protobuf:"bytes,7,opt,name=delegate_sign,json=delegateSign,proto3" json:"delegate_sign"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Header) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *Header) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Header) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Header) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Header) GetDelegate() []byte {
	if m != nil {
		return m.Delegate
	}
	return nil
}

func (m *Header) GetDelegateSign() []byte {
	if m != nil {
		return m.DelegateSign
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "types.Block")
	proto.RegisterType((*Header)(nil), "types.Header")
}

func init() {
	proto.RegisterFile("github.com/bottos-project/core/common/types/block.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0x87, 0x49, 0xff, 0xe4, 0x7d, 0x9d, 0x36, 0x08, 0x7b, 0x90, 0xa5, 0x08, 0x86, 0x8a, 0x12,
	0x90, 0x26, 0x50, 0x41, 0x4f, 0x5e, 0x7a, 0xea, 0x39, 0x7a, 0xf2, 0x12, 0x36, 0xe9, 0x98, 0xc4,
	0x76, 0x33, 0x61, 0x77, 0x2a, 0xf8, 0x0d, 0xfd, 0x58, 0xd2, 0x6d, 0x6a, 0xf5, 0xd8, 0xdb, 0xce,
	0x33, 0xbf, 0x79, 0x76, 0x77, 0xe0, 0xb1, 0xac, 0xb9, 0xda, 0xe6, 0x71, 0x41, 0x3a, 0xc9, 0x89,
	0x99, 0xec, 0xac, 0x35, 0xf4, 0x8e, 0x05, 0x27, 0x05, 0x19, 0x4c, 0x0a, 0xd2, 0x9a, 0x9a, 0x84,
	0x3f, 0x5b, 0xb4, 0x49, 0xbe, 0xa1, 0x62, 0x1d, 0xb7, 0x86, 0x98, 0xc4, 0xd0, 0xa1, 0xc9, 0xd3,
	0x29, 0xf3, 0x6c, 0x54, 0x63, 0x55, 0xc1, 0x35, 0x35, 0x7b, 0xcb, 0xf4, 0x0d, 0x86, 0x8b, 0x9d,
	0x54, 0xdc, 0x80, 0x5f, 0xa1, 0x5a, 0xa1, 0x91, 0x5e, 0xe8, 0x45, 0xa3, 0x79, 0x10, 0xbb, 0x91,
	0x78, 0xe9, 0x60, 0xda, 0x35, 0xc5, 0x03, 0x8c, 0x7f, 0x49, 0xac, 0xec, 0x85, 0xfd, 0x68, 0x34,
	0x17, 0x5d, 0xf8, 0xe5, 0xd8, 0x4a, 0xff, 0xe4, 0xa6, 0x5f, 0x1e, 0xf8, 0x7b, 0x95, 0xb8, 0x85,
	0xf3, 0xd6, 0xe0, 0x47, 0xe6, 0x3e, 0x93, 0x55, 0xca, 0x56, 0xee, 0xca, 0x71, 0x1a, 0xec, 0xb0,
	0x7b, 0xcd, 0x52, 0xd9, 0x4a, 0x5c, 0x80, 0xdf, 0x6c, 0x75, 0x8e, 0x46, 0xf6, 0x42, 0x2f, 0x0a,
	0xd2, 0xae, 0x12, 0x97, 0x70, 0xc6, 0xb5, 0x46, 0xcb, 0x4a, 0xb7, 0xb2, 0x1f, 0x7a, 0xd1, 0x20,
	0x3d, 0x02, 0x71, 0x05, 0x23, 0x8d, 0x66, 0xbd, 0xc1, 0xcc, 0x10, 0xb1, 0x1c, 0x38, 0x33, 0xec,
	0x51, 0x4a, 0xc4, 0x62, 0x02, 0xff, 0x57, 0xb8, 0xc1, 0x52, 0x31, 0xca, 0xa1, 0xeb, 0xfe, 0xd4,
	0xe2, 0x1a, 0x82, 0xc3, 0x39, 0xb3, 0x75, 0xd9, 0xc8, 0x7f, 0x2e, 0x30, 0x3e, 0xc0, 0xe7, 0xba,
	0x6c, 0x16, 0xb3, 0xd7, 0xbb, 0x13, 0x76, 0x9e, 0xfb, 0x6e, 0xd1, 0xf7, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x1c, 0xbb, 0xc8, 0x2a, 0xe9, 0x01, 0x00, 0x00,
}
