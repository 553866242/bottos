// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/bottos-project/core/common/types/block.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Block struct {
	Header       *Header        `protobuf:"bytes,1,opt,name=Header" json:"Header"`
	Transactions []*Transaction `protobuf:"bytes,2,rep,name=Transactions" json:"Transactions"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Block) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type Header struct {
	PrevBlockHash  []byte   `protobuf:"bytes,1,opt,name=PrevBlockHash,proto3" json:"PrevBlockHash"`
	Number         uint32   `protobuf:"varint,2,opt,name=Number" json:"Number"`
	Timestamp      uint64   `protobuf:"varint,3,opt,name=Timestamp" json:"Timestamp"`
	MerkleRoot     []byte   `protobuf:"bytes,4,opt,name=MerkleRoot,proto3" json:"MerkleRoot"`
	Producer       []byte   `protobuf:"bytes,5,opt,name=Producer,proto3" json:"Producer"`
	ProducerChange [][]byte `protobuf:"bytes,6,rep,name=ProducerChange,proto3" json:"ProducerChange"`
	ProducerSign   []byte   `protobuf:"bytes,7,opt,name=ProducerSign,proto3" json:"ProducerSign"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Header) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *Header) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Header) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Header) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Header) GetProducer() []byte {
	if m != nil {
		return m.Producer
	}
	return nil
}

func (m *Header) GetProducerChange() [][]byte {
	if m != nil {
		return m.ProducerChange
	}
	return nil
}

func (m *Header) GetProducerSign() []byte {
	if m != nil {
		return m.ProducerSign
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "types.Block")
	proto.RegisterType((*Header)(nil), "types.Header")
}

func init() {
	proto.RegisterFile("github.com/bottos-project/core/common/types/block.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0x87, 0x53, 0xfe, 0xf4, 0x7d, 0x1d, 0x8a, 0x87, 0x3d, 0x98, 0x0d, 0x31, 0xa6, 0x21, 0x6a,
	0x9a, 0x18, 0xda, 0x04, 0x13, 0x3d, 0x79, 0xc1, 0x0b, 0x17, 0x0d, 0x59, 0x39, 0x79, 0xdb, 0x2e,
	0x23, 0x54, 0xd8, 0x4e, 0xb3, 0xbb, 0x98, 0xf8, 0x9d, 0xfd, 0x10, 0xc6, 0x05, 0x84, 0x7a, 0xe3,
	0x36, 0xf3, 0xfc, 0x66, 0x9e, 0x39, 0x0c, 0xdc, 0xcf, 0x0b, 0xb7, 0x58, 0xe7, 0xa9, 0x22, 0x9d,
	0xe5, 0xe4, 0x1c, 0xd9, 0x41, 0x65, 0xe8, 0x1d, 0x95, 0xcb, 0x14, 0x19, 0xcc, 0x14, 0x69, 0x4d,
	0x65, 0xe6, 0x3e, 0x2b, 0xb4, 0x59, 0xbe, 0x22, 0xb5, 0x4c, 0x2b, 0x43, 0x8e, 0x58, 0xdb, 0xa3,
	0xde, 0xc3, 0x31, 0xfb, 0xce, 0xc8, 0xd2, 0x4a, 0xe5, 0x0a, 0x2a, 0x37, 0x96, 0xfe, 0x1b, 0xb4,
	0x47, 0x3f, 0x52, 0x76, 0x05, 0xe1, 0x18, 0xe5, 0x0c, 0x0d, 0x0f, 0xe2, 0x20, 0xe9, 0x0c, 0xbb,
	0xa9, 0x5f, 0x49, 0x37, 0x50, 0x6c, 0x43, 0x76, 0x07, 0xd1, 0x74, 0x2f, 0xb1, 0xbc, 0x11, 0x37,
	0x93, 0xce, 0x90, 0x6d, 0x87, 0x0f, 0x22, 0x51, 0x9b, 0xeb, 0x7f, 0x05, 0x3b, 0x3f, 0xbb, 0x84,
	0xee, 0xc4, 0xe0, 0x87, 0x3f, 0x3b, 0x96, 0x76, 0xe1, 0x0f, 0x46, 0xa2, 0x0e, 0xd9, 0x19, 0x84,
	0xcf, 0x6b, 0x9d, 0xa3, 0xe1, 0x8d, 0x38, 0x48, 0xba, 0x62, 0xdb, 0xb1, 0x73, 0x38, 0x99, 0x16,
	0x1a, 0xad, 0x93, 0xba, 0xe2, 0xcd, 0x38, 0x48, 0x5a, 0x62, 0x0f, 0xd8, 0x05, 0xc0, 0x13, 0x9a,
	0xe5, 0x0a, 0x05, 0x91, 0xe3, 0x2d, 0x2f, 0x3e, 0x20, 0xac, 0x07, 0xff, 0x27, 0x86, 0x66, 0x6b,
	0x85, 0x86, 0xb7, 0x7d, 0xfa, 0xdb, 0xb3, 0x6b, 0x38, 0xdd, 0xd5, 0x8f, 0x0b, 0x59, 0xce, 0x91,
	0x87, 0x71, 0x33, 0x89, 0xc4, 0x1f, 0xca, 0xfa, 0x10, 0xed, 0xc8, 0x4b, 0x31, 0x2f, 0xf9, 0x3f,
	0xef, 0xa9, 0xb1, 0xd1, 0xe0, 0xf5, 0xe6, 0x88, 0xbf, 0xe4, 0xa1, 0x7f, 0xc6, 0xed, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb5, 0x31, 0x6a, 0x9c, 0x0d, 0x02, 0x00, 0x00,
}
